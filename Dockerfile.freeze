FROM python:3.9-bullseye as base

WORKDIR /code

COPY ./pyproject.toml ./poetry.lock* main.py /code/
COPY ./app /code/app

RUN pip install --no-cache-dir poetry \
    && poetry export --output requirements.txt --without-hashes \
    && pip install --no-cache-dir --upgrade -r /code/requirements.txt

FROM base as compressor

RUN pip install --no-cache-dir cx_Freeze

# run cxfreeze and remove some libs that are already in our final image in
# /usr/lib/x86_64-linux-gnu and strip symbols and debug info from shared libraries:
RUN cxfreeze --compress main.py --target-dir dist --packages uvicorn \
    && cd dist/lib \
    && find . -type f -name "*.so" | \
    xargs ldd | fgrep '=>' | \
    awk '{print $3,$1}' | sort -u | xargs -n 2 cp -v --no-clobber \
    && rm -f libcrypto.so.1.1 \
    && rm -f libssl.so.1.1 \
    && rm -f libc.so.6 libdl.so.2 libm.so.6 libpthread.so.0 librt.so.1\
    && find . -name '*.so' | xargs strip

# FROM debian:bullseye-slim
FROM gcr.io/distroless/base-debian11

COPY --from=compressor /code/dist/ /app/

ENV LD_LIBRARY_PATH=/app/lib

WORKDIR /app

ENTRYPOINT ["/app/main"]
CMD ["--host", "0.0.0.0", "--port", "80"]
